datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Model untuk Role (Admin, Seller, User)
enum Role {
  ADMIN
  SELLER
  USER
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role
  profile   Profile?
  auctions  Auction[] @relation("UserAuctions") 
  products  Product[] @relation("UserProducts") 
  bids      Bid[]     @relation("UserBids") 
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Profile {
  id      Int     @id @default(autoincrement())
  userId  Int     @unique
  address String?
  phone   String?
  user    User    @relation(fields: [userId], references: [id])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Int
  stock       Int
  isAuction   Boolean     @default(false)
  categoryId  Int
  sellerId    Int
  category    Category    @relation(fields: [categoryId], references: [id])
  seller      User        @relation("UserProducts", fields: [sellerId], references: [id]) 
  auctions    Auction[]
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Auction {
  id         Int      @id @default(autoincrement())
  productId  Int      @unique
  startPrice Int
  currentBid Int
  endDate    DateTime
  product    Product  @relation(fields: [productId], references: [id])
  bids       Bid[]
  sellerId   Int
  seller     User     @relation("UserAuctions", fields: [sellerId], references: [id]) // Relasi balik ke User
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Bid {
  id        Int      @id @default(autoincrement())
  auctionId Int      
  userId    Int
  amount    Int
  timestamp DateTime @default(now())
  auction   Auction  @relation(fields: [auctionId], references: [id])
  user      User     @relation("UserBids", fields: [userId], references: [id]) // Relasi balik ke User
  
  @@index([auctionId])
  @@index([userId])
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  totalAmount Int
  status      OrderStatus @default(PENDING)
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELLED
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
